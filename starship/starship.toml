"$schema" = 'https://starship.rs/config-schema.json'
add_newline = true
format = """
$directory\
$git_branch\
$git_status\
$docker_context\
$golang\
$nodejs\
$python\
$jobs\
$status\
$line_break\
$character"""

right_format = """
$cmd_duration\
$time"""

[character]
success_symbol = "[❯](cyan)"
error_symbol = "[❯](red)"
vimcmd_symbol = "[❮](cyan)"

[directory]
style = "cyan"
format = "[$path]($style) "
truncation_length = 3
truncate_to_repo = true

[git_branch]
format = "[$symbol$branch]($style) "
symbol = " " # nf-oct-git_branch
style = "green"

[git_status]
format = """($all_status$ahead_behind) """
ahead = "[⇡](blue)"
behind = "[⇣](red)"
diverged = "[⇕](purple)"
up_to_date = "[✓](green)"
untracked = "[?](bright-purple)"
stashed = "[≡](cyan)"
modified = "[!](yellow)"
staged = "[+](green)"
renamed = "[»](blue)"
deleted = "[✘](red)"

[docker_context]
format = "[$symbol$context]($style) "
symbol = " "
style = "blue"
only_with_files = false
detect_files = ["docker-compose.yml", "docker-compose.yaml", "Dockerfile"]
detect_folders = []
disabled = false

[golang]
format = "[$symbol$version]($style) "
symbol = " "
style = "cyan"
detect_extensions = ["go"]
detect_files = ["go.mod", "go.sum", "glide.yaml", "Gopkg.yml", "Gopkg.lock", ".go-version"]
detect_folders = ["Godeps"]

[nodejs]
format = "[$symbol($version )]($style)"
symbol = "󰎙 " # nf-dev-nodejs_small
style = "green"
detect_extensions = ["js", "mjs", "cjs", "ts", "mts", "cts"]
detect_files = ["package.json", ".node-version", ".nvmrc", "tsconfig.json"]
detect_folders = ["node_modules"]
disabled = false

[python]
format = "[$symbol($version )]($style)"
symbol = "󰌠 "
style = "yellow"
detect_extensions = ["py"]
detect_files = ["requirements.txt", "pyproject.toml", ".python-version", "Pipfile", "tox.ini", "setup.py", "__init__.py"]
detect_folders = [".venv", "venv", ".virtualenv"]
disabled = false

[fill]
disabled = true # Removed fill for compactness

[jobs]
format = "[$symbol$number]($style) "
symbol = "✦ "
style = "yellow"
number_threshold = 1
symbol_threshold = 1

[status]
format = "[$symbol$status]($style) "
symbol = "✖ "
success_symbol = ""
style = "red"
disabled = false

[cmd_duration]
disabled = false
format = "[$duration]($style) "
min_time = 2000
style = "yellow dimmed"

[time]
disabled = false
format = "[$time]($style) "
style = "dimmed"
time_format = "%T"

[custom.nx]
command = '''
dir="$PWD"
while [ "$dir" != "/" ]; do
  if [ -f "$dir/nx.json" ]; then
    echo "nx"
    exit 0
  fi
  dir=$(dirname "$dir")
done
'''
when = '''
dir="$PWD"
while [ "$dir" != "/" ]; do
  [ -f "$dir/nx.json" ] && exit 0
  dir=$(dirname "$dir")
done
exit 1
'''
format = "[$symbol$output]($style) "
symbol = "⬢ "
style = "purple"
description = "Shows Nx workspace name when in monorepo"
disabled = true
